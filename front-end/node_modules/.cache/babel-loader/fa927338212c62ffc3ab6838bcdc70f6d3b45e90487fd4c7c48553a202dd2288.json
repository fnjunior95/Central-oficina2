{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pichau\\\\Documents\\\\UTFPR\\\\ofi2ellp\\\\src\\\\components\\\\image-button\\\\ImageButton.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./ImageButton.css\"; // Adicione estilos personalizados aqui\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageButton = ({\n  onImageSelect\n}) => {\n  _s();\n  const [imageName, setImageName] = useState(\"\");\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    if (file) {\n      setImageName(file.name);\n      onImageSelect(file); // Chama a função passada via props\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-upload-button\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"file-input\",\n      className: \"upload-btn\",\n      children: imageName ? `Imagem selecionada: ${imageName}` : \"Adicionar Imagem\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      id: \"file-input\",\n      style: {\n        display: \"none\"\n      },\n      accept: \"image/*\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageButton, \"ibWeSBKwBVIFj3T+B1mBJ+nxdPs=\");\n_c = ImageButton;\nexport default ImageButton;\nvar _c;\n$RefreshReg$(_c, \"ImageButton\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ImageButton","onImageSelect","_s","imageName","setImageName","handleFileChange","event","file","target","files","name","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","style","display","accept","onChange","_c","$RefreshReg$"],"sources":["C:/Users/Pichau/Documents/UTFPR/ofi2ellp/src/components/image-button/ImageButton.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./ImageButton.css\"; // Adicione estilos personalizados aqui\r\n\r\nconst ImageButton = ({ onImageSelect }) => {\r\n  const [imageName, setImageName] = useState(\"\");\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      setImageName(file.name);\r\n      onImageSelect(file); // Chama a função passada via props\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"image-upload-button\">\r\n      <label htmlFor=\"file-input\" className=\"upload-btn\">\r\n        {imageName ? `Imagem selecionada: ${imageName}` : \"Adicionar Imagem\"}\r\n      </label>\r\n      <input\r\n        type=\"file\"\r\n        id=\"file-input\"\r\n        style={{ display: \"none\" }}\r\n        accept=\"image/*\"\r\n        onChange={handleFileChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageButton;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,mBAAmB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMQ,gBAAgB,GAAIC,KAAK,IAAK;IAClC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAIF,IAAI,EAAE;MACRH,YAAY,CAACG,IAAI,CAACG,IAAI,CAAC;MACvBT,aAAa,CAACM,IAAI,CAAC,CAAC,CAAC;IACvB;EACF,CAAC;EAED,oBACER,OAAA;IAAKY,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClCb,OAAA;MAAOc,OAAO,EAAC,YAAY;MAACF,SAAS,EAAC,YAAY;MAAAC,QAAA,EAC/CT,SAAS,GAAG,uBAAuBA,SAAS,EAAE,GAAG;IAAkB;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D,CAAC,eACRlB,OAAA;MACEmB,IAAI,EAAC,MAAM;MACXC,EAAE,EAAC,YAAY;MACfC,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAO,CAAE;MAC3BC,MAAM,EAAC,SAAS;MAChBC,QAAQ,EAAElB;IAAiB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACf,EAAA,CAzBIF,WAAW;AAAAwB,EAAA,GAAXxB,WAAW;AA2BjB,eAAeA,WAAW;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}